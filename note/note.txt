数据结构：
    平衡二叉树
        优点:节点插入删除查找时间复杂度为o(logn)
        特点:左右子树高度差不大于1
    B树
        多路查找每个节点存储数据
    B+树
        非叶子节点只存储索引，减少io次数
    红黑树
        每个节点红色或者黑色
        根节点黑色
        红色节点的儿子是黑色
        从任意节点到叶子节点路径包含相同黑色节点
        从根节点到叶子节点的最远路径不会超过最近路径的二倍，高度差不会是二倍
git使用：
    git cherry-pick
    git log
    git rebase -i
    git tag
    git fetch -t

protobuf:

rocketMQ:

代码风格:
    单一职责，面向对象，
幂等：
    含义：
        对于多次相同请求的处理，返回结果一致
    如何做到幂等：
    1.首先去查询上一次的执行状态，如果没有则认为是第一次请求
    2.在服务改变状态的业务逻辑前，保证防重复提交的逻辑
    涉及方面：
    乐观锁，防重表，分布式锁
微服务：
    服务发现：
        consul
    网关：
        traefik